---
- name: Check if Docker is already installed
  package_facts:
    manager: "auto"

- name: Docker check result
  debug: 
    msg: "Dcoker is already installed"
  when: "'docker-ce' in ansible_facts.packages"

- name: Install dependence packages
  apt: 
    name: "{{ item }}"
    update_cache: yes
    state: present
  loop: "{{ list_packages }}"

- name: Add Dockerâ€™s official GPG key
  command: |
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL {{ docker_debian_url }}/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    warn: false
  when: docker_debian_url is defined
   
- name: Set up the repository
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] {{ docker_url }} $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args: 
    executable: /bin/bash
  register: setup_repo

# - name: Add the Docker repository to the APT sources
#   apt_repository:
#     repo: "{{ docker_apt_repository }}"
#     state: present
#     update_cache: true
#   when: docker_apt_repository is defined
      
- name: "Install Docker package for Debian or Ubuntu"
  apt:
    name: docker-ce
    update_cache: true
    state: "{{ docker_version }}"
  when: ansible_os_family is regex('Debian|Ubuntu')

- name: "Add docker permissions to user who run docker commands"
  command: sudo usermod -aG docker ${USER}
  when: setup_repo.rc == 0

- name: Ensure Docker service is running
  service:
    name: "docker"
    state: started
  register: run_docker

- name: "Docker - end install"
  debug:
    msg: "Docker - version: {{ docker_version }} is successfully installed on {{ ansible_hostname }}"
  when: run_docker.name == "docker"